<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.fm.user.dao.UserMapper">
    <!--<select id="selectState" resultType="java.lang.Exception" parameterType="java.lang.String">-->
        <!--select state from user where code = #{code}-->
    <!--</select>-->

    <!--<update id="updateUserpwd"  >-->
        <!--update user set upwd = #{arg0} ,state = 1 where code = #{arg1}-->
    <!--</update>-->
    <!--根据用户的姓名 ,单位等信息,查找id-->
    <select id="selectUserId" parameterType="cn.fm.pojo.User" resultType="cn.fm.pojo.User">
        select uid,uname,ucompany,uupdatetime,uphone,wid,unumber,state,ifAdmin,uaccount,uworkname  from user
        <where>
            <if test="uname != null" >
                uname like concat(concat('%',#{uname}), '%')
            </if>
            <if test="wid != 0">
               and  wid = #{wid}
            </if>
            and state != 0
        </where>
    </select>


    <!--添加借阅信息 ,同步更新需要归还的时间 和领取人-->
    <update id="insertBorrowcfInfo" parameterType="cn.fm.pojo.Borrow" >
        update borrow_companyFile set borrowtime = #{borrowtime} , shouldback = #{shouldback} , secondUid = #{secondUid} where wid = #{wid} and fileid = #{fileid} and borrowtime is null
        and shouldback is null
    </update>

    <!--添加借阅信息 ,同步更新需要归还的时间 ,和领取人-->
    <update id="insertBorrowgfInfo" parameterType="cn.fm.pojo.Borrow" >
        update borrow_getFile set borrowtime = #{borrowtime} , shouldback = #{shouldback},secondUid = #{secondUid}  where wid = #{wid} and fileid = #{fileid} and borrowtime is null
        and shouldback is null
    </update>

    <!--设置文件已经被借出 ,刷指纹领走的时候待借阅标记修改,这就是说明这个文件被借出 ,-->
    <update id="updateCompanyFileIsBorrow" parameterType="int">
        update companyFile set isborrow = 1 , waitborrow = 2  where cfid = #{cfid}
    </update>

    <!--设置文件已经归还-->
    <update id="updateCompanyFileBack" parameterType="int">
        update companyFile set isborrow = 2  where cfid IN
        <foreach collection="fileid" close=")" open="(" separator="," item="id">
            #{id}
        </foreach>
    </update>

    <!--设置文件已经被借出  刷指纹领走的时候 -->
    <update id="updateGetFileIsBorrow" parameterType="int">
        update getFile set isborrow = 1 , waitborrow=2 where gfid = #{gfid}
    </update>

    <!--设置文件已经归还-->
    <update id="updateGetFileBack" parameterType="int">
        update getFile set isborrow = #{isborrow}  where gfid = #{fileid}
    </update>
    <!--更新归还时间 ,因为一个文件只能借一次 所以  根据文件id就可以归还,但是要进行判断, 判断这个文件是不是在借阅中,并且
    这个文件是不是没更新过-->
    <update id="updatecfBackTime" parameterType="int">
        update borrow_companyFile set backtime=CURDATE() WHERE backtime is null AND fileid IN
        <foreach collection="fileid" close=")" open="(" separator="," item="id">
            #{id}
        </foreach>
    </update>
    <update id="updategfBackTime" parameterType="int">
        update borrow_getFile set backtime=CURDATE() WHERE backtime is null AND fileid IN
        <foreach collection="fileid" close=")" open="(" separator="," item="id">
            #{id}
        </foreach>
    </update>

    <!--根据时间范围 查找没有归还的文件-->
    <select id="selectBorrowcfByborrowtime" resultType="cn.fm.pojo.Borrow" parameterType="String" >
        select uid,fileid,borrowtime,backtime,shouldback,givetime from borrow_companyFile where backtime is null and borrowtime &lt;= #{endtime} and borrowtime &gt;= #{starttime}
    </select>
    <!--根据时间范围 查找没有归还的文件-->
    <select id="selectBorrowgfByborrowtime" resultType="cn.fm.pojo.Borrow" parameterType="String" >
        select uid,fileid,borrowtime,backtime,shouldback,givetime from borrow_getFile where backtime is null and borrowtime &lt;= #{endtime} and borrowtime &gt;= #{starttime}
    </select>
    <!--根据用户查询借阅信息 或者查询 这一类的借阅信息-->
    <select id="selectBorrowcfById" resultType="cn.fm.pojo.Borrow" parameterType="int">
        select uid,fileid,borrowtime,backtime,shouldback,givetime,wid from borrow_companyFile
        <where>
            <if test="uid != 0" >
                uid = #{uid}
            </if>
            and borrowstate=1
        </where>
    </select>

    <!--根据用户查询借阅信息-->
    <select id="selectBorrowgfById" resultType="cn.fm.pojo.Borrow" parameterType="int">
        select uid,fileid,borrowtime,backtime,givetime,shouldback from borrow_getFile
        <where>
            <if test="uid != 0" >
                uid = #{uid}
            </if>
            and borrowstate=1
        </where>
    </select>
    <!--根据文件id查找这个文件的借阅历史-->
    <!--可以用来查找这个文件是不是被解阅,,是的话,不能进行删除-->
    <select id="selectBorrowcfInfoByFileid" resultType="cn.fm.pojo.Borrow" parameterType="java.lang.Integer" >
         select wid,uid,fileid,borrowtime,backtime,givetime,shouldback,secondUid from borrow_companyFile where fileid = #{fileid} and borrowstate=1
    </select>
    <select id="selectBorrowgfInfoByFileid" parameterType="java.lang.Integer" resultType="cn.fm.pojo.Borrow">
        select wid,uid,fileid,borrowtime,backtime,givetime,shouldback,secondUid from borrow_getFile where fileid = #{fileid} and borrowstate=1
    </select>

    <!--查看该文件是不是被借出去了,-->
    <select id="selectgfisBorrow" parameterType="int" resultType="int">
        select isborrow from getFile where gfid = #{gfid}
        <!--IN-->
        <!--<foreach collection="gfid" item="id" separator="," open="(" close=")">-->
            <!--#{id}-->
        <!--</foreach>-->
        and state=1
    </select>


    <select id="selectcfisBorrow" parameterType="int" resultType="int">
        select isborrow from companyFile where cfid = #{cfid}
        <!--<foreach collection="cfid" item="id" separator="," open="(" close=")">-->
            <!--#{id}-->
        <!--</foreach>-->
        and state=1
    </select>


    <!--查询最顶层的分类,作为分类级联的最高层-->
    <select id="selectClassifyBiggest" resultType="cn.fm.pojo.Classify" >
        select cyid,cyname,cyaddress from classify where cyfatherid = 0
    </select>
<!--根据父类查找子类分类-->
    <select id="selectClassifyByFatherId" resultType="cn.fm.pojo.Classify" parameterType="java.lang.Integer">
        select cyid,cyname,cyaddress from classify where cyfatherid = #{fatherid}
    </select>


    <!--查找更新时间-->
    <select id="selectUserupdatetime" parameterType="java.lang.String" resultType="java.lang.String">
        select uupdatetime from user where code = #{code}
    </select>

    <!--根据id查找待领取的文件信息,就是借阅时间为null的-->
    <select id="selectcfWaitBorrow" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select fileid from borrow_companyFile where wid = #{wid} and borrowtime is null and borrowstate=1
    </select>
    <!--根据id查找待领取的文件信息,就是借阅时间为null的-->
    <select id="selectgfWaitBorrow" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select fileid from borrow_getFile where wid = #{wid} and borrowtime is null and borrowstate=1
    </select>
<!--用来查找借出文件 , 查找没有归还的文件 的uid和fileid 以及 shouldback时间-->
   <select id="selectcfIsPassTime" resultType="cn.fm.pojo.Borrow" >
       SELECT wid,uid,fileid,shouldback from borrow_companyFile where backtime is null and borrowstate=1
   </select>

    <!--先查找借出的文件 , 查找没有归还的文件 的uid和fileid 以及 shouldback时间-->
    <select id="selectgfIsPassTime" resultType="cn.fm.pojo.Borrow" >
        SELECT wid , uid,fileid,shouldback from borrow_getFile where backtime is null and borrowstate=1
    </select>

    <!--待分配接口的文件,修改文件的waitborrow-->
    <update id="updatecfWaitBorrow" parameterType="java.lang.Integer" >
        update companyFile set waitborrow = 1 where cfid = #{cfid} and state = 1
    </update>
    <update id="updategfWaitBorrow" parameterType="java.lang.Integer" >
        update getFile set waitborrow = 1 where gfid = #{gfid} and state = 1
    </update>
    <!--待分配接口 录入借阅信息-->
    <insert id="insertcfWaitBorrowInfo" parameterType="cn.fm.pojo.Borrow">
        insert into borrow_companyFile(wid,fileid,givetime,uid) VALUES (#{wid},#{fileid}, #{givetime},#{uid})
    </insert>
    <insert id="insertgfWaitBorrowInfo" parameterType="cn.fm.pojo.Borrow">
        insert into borrow_getFile(wid,fileid,givetime,uid) VALUES (#{wid},#{fileid}, #{givetime},#{uid})
    </insert>
</mapper>