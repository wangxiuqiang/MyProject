<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.fm.admin.dao.AdminMapper">
    <!--查询超级管理员用于登录-->
    <!--<select id="selectAdmin" resultType="cn.fm.pojo.Admin" parameterType="String">-->
        <!--select aname ,apwd from admin where aname = #{aname};-->
    <!--</select>-->

    <!--<insert id="addAdmin" parameterType="cn.fm.pojo.Admin" >-->
        <!--insert into admin(aname,apwd) VALUES (#{aname},#{apwd})-->
    <!--</insert>-->


    <select id="findUserByUaccount" parameterType="String" resultType="cn.fm.pojo.User">
        select uid,uaccount,upwd,state,uname from user where uaccount = #{uaccount}
    </select>
    <insert id="addUser" parameterType="cn.fm.vo.UserExtend" >
        insert into user(uname,ucompany,wid,uupdatetime,ifAdmin,uphone,unumber )
        values(#{uname},#{ucompany},#{wid},#{uupdatetime},#{ifAdmin},#{uphone},#{unumber})
        <selectKey keyProperty="uid" resultType="java.lang.Integer" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>
    <!--插入用户和角色的关联-->
    <insert id="addUser_Role" parameterType="int">
        insert into user_roles(uid,rid) values(#{uid},#{rid})
    </insert>
    <!-- 更新的时候写权限到数据库 ,没用到,暂时-->
    <!--<insert id="insertUser_Role" parameterType="int" >-->
         <!--insert into user_roles(uid,pid) VALUES(#{uid},#{pid})-->
    <!--</insert>-->
    <!--查找工作的单位-->
    <select id="selectWorkPlace" resultType="cn.fm.pojo.WorkPlace" >
        select wid ,wname from workPlace
    </select>
    <!--查找用户是不是存在-->
    <!--<select id="selectEmailIfExist" parameterType="java.lang.String" resultType="java.lang.String">-->
        <!--select uemail from user where uemail = #{uemail};-->
    <!--</select>-->

    <select id="findAllWorker" resultType="cn.fm.pojo.User">
        select uid,uname,ucompany,uupdatetime,uphone,wid,unumber,state,ifAdmin,uaccount,uworkname from user
    </select>

    <select id="findWorkerById" resultType="cn.fm.pojo.User">
        select uid,uname,ucompany,uupdatetime,uphone,wid,unumber,state,ifAdmin,uaccount,uworkname from user where uid = #{id}
    </select>

    <update id="deleteWorkerById" parameterType="int">
       update user set state = 0 where uid IN
        <foreach collection="id" close=")" open="(" separator="," item="uid" >
            #{uid}
        </foreach>
    </update>
    <!--同时删除用户角色信息-->
    <delete id="deleteUser_roles">
        DELETE  FROM user_roles where uid IN
        <foreach collection="uid" close=")" open="(" separator="," item="id" >
            #{id}
        </foreach>
    </delete>
    <update id="updateWorkerById" parameterType="cn.fm.pojo.User">
        update user
        <set>
            <if test="uname != null">
                uname = #{uname} ,
            </if>
            <if test="uaccount != null">
                uaccount = #{uaccount} ,
            </if>
            <if test="ucompany != null">
                ucompany = #{ucompany},
            </if>
            <if test="uworkname != null">
                uworkname = #{uworkname},
            </if>
            <if test="wid != 0">
                wid = #{wid},
            </if>
            <if test="unumber != null">
                unumber = #{unumber},
            </if>
            <if test="uphone != null">
                uphone = #{uphone},
            </if>
            <if test="state != 0">
                state = #{state},
            </if>
            <!--<if test="uemail != null">-->
                <!--uemail = #{uemail},-->
            <!--</if>-->
            <if test="upwd != null">
                upwd = #{upwd}
            </if>
        </set>
       WHERE uid = #{uid}
    </update>
<!--根据uid更改用户角色-->
    <update id="updateUser_Role" parameterType="int">
        update user_roles set rid = #{rid} where uid = #{uid}
    </update>
    <!--查找全部的权限-->
    <select id="selectAllPermissions" resultType="cn.fm.pojo.Permission">
        SELECT pid,pname,pdescribe from permission
    </select>
    <!--查找全部的角色-->
    <select id="selectAllRoles" resultType="cn.fm.pojo.Role" >
        SELECT rid,rname,rdescribe from role
    </select>



    <!--从关联表中根据Uid查Rid-->
    <select id="selectRid" parameterType="int" resultType="int">
        select rid from user_roles where uid = #{uid}
    </select>

    <!--根据rid 查找相应的角色名称-->
    <select id="selectRoles" parameterType="int" resultType="String">
        select rname FROM role where rid IN
        <foreach collection="rids" item="item" close=")" open="(" separator=",">
            #{item}
        </foreach>
    </select>
    <!--用于前台角色名的展示-->
    <select id="findRoles" parameterType="int" resultType="cn.fm.pojo.Role">
        select rid,rname,rdescribe FROM role where rid IN
        <foreach collection="rids" item="item" close=")" open="(" separator=",">
            #{item}
        </foreach>
    </select>
<!--从关联表中根据Rid查出来Pid , 用于权限名的查询-->
    <select id="selectPids" parameterType="int" resultType="int">
        select pid from role_permission where rid IN
        <foreach collection="rids" item="item" close=")" open="(" separator=",">
            #{item}
        </foreach>
    </select>

    <!--根据角色查找权限的名称,用来验证-->
    <select id="selectPermissions" parameterType="int" resultType="String">
        select pname from permission where pid IN
        <foreach collection="pids" item="item" close=")" open="(" separator=",">
            #{item}
        </foreach>
    </select>
    <!--用于前台显示-->
    <select id="findPermissions" parameterType="int" resultType="cn.fm.pojo.Permission">
        select pid,pname,pdescribe from permission where pid IN
        <foreach collection="pids" item="item" close=")" open="(" separator=",">
            #{item}
        </foreach>
    </select>


    <!--添加用户单位-->
    <insert id="insertCompany" parameterType="cn.fm.pojo.WorkPlace" >
        insert into workPlace(wname) VALUES (#{wname})
    </insert>
    <!--删除用户单位-->
    <delete id="delCompany" parameterType="int" >
        delete from workPlace where wid = #{wid}
    </delete>
    <!--更新 用户单位-->
    <update id="updateCompany" parameterType="cn.fm.pojo.WorkPlace">
        update workPlace set wname=#{workPlace.wname} where wid=#{workPlace.wid}
    </update>
    <!--添加分类 -->
    <insert id="insertClassify" parameterType="cn.fm.pojo.Classify"  useGeneratedKeys="true" keyProperty="cyid">

        insert into classify(cyname,cyfatherid,cyaddress) VALUES (#{cyname},#{cyfatherid},#{cyaddress})

    </insert>
    <!--删除分类-->
    <delete id="delClassify" parameterType="int" >
        delete from classify where cyid = #{cyid}
    </delete>
    <!--如果是父分类,就删除所有的子分类-->
    <delete id="delClassifyByFatherid" parameterType="int" >
        delete from classify where cyfatherid = #{cyfatherid}
    </delete>
    <!--更新 分类-->
    <update id="updateClassify" parameterType="cn.fm.pojo.Classify">
        update classify
        <set>
            <if test="cyname != null">
                cyname = # {cyname},
            </if>
            <if test="cyaddress != null">
                cyaddress = #{cyaddress},
            </if>
            <if test="cyfatherid != 0" >
                cyfatherid = #{cyfatherid}
            </if>
        </set>
        where cyid = #{cyid}
    </update>

    <!--添加密级-->
    <insert id="addLevelInfo" parameterType="String" >
        insert into level(lname) values(#{value})
    </insert>
    <!--删除密级-->
    <delete id="delLevelInfo" parameterType="int" >
        delete from level where lid = #{lid}
    </delete>
    <!--更新 密级-->
    <update id="updateLevelInfo" parameterType="cn.fm.pojo.Level">
        update level set lname = #{lname} where lid = #{lid}
    </update>
    <!--查询所有密级-->
    <select id="selectAllLevel" resultType="cn.fm.pojo.Level" >
        select lid,lname from level
    </select>

    <!--添加指纹信息到数据库-->
    <insert parameterType="cn.fm.pojo.Fingerprint" id="addFingerInfo" >
        insert into fingerprint(uid,finger) VALUES (#{uid} ,#{finger} )
    </insert>
    <!--根据用户id删除指纹信息-->
    <delete id="delFingerInfoByUid" parameterType="int" >
        delete from fingerprint where uid IN
        <foreach collection="uid" close=")" open="(" separator="," item="id">
            #{id}
        </foreach>
    </delete>
    <!--从数据库中取出所有的指纹信息进行比较-->
    <select id="selectAllFingerInfo" resultType="cn.fm.pojo.Fingerprint">
        select uid,finger from fingerprint;
    </select>


</mapper>